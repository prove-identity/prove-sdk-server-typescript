/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type AddressResponse = {
    /**
     * An integer value indicating the overall address score determined as a result of address matching. A value >=100 indicates verified = TRUE.
     */
    addressScore?: number | undefined;
    /**
     * A boolean value indicating if the city name was matched during address matching.
     */
    city?: boolean | undefined;
    /**
     * A float value indicating the distance score as a result of address matching.
     */
    distance?: number | undefined;
    /**
     * A boolean value indicating if the postal code was matched during address matching.
     */
    postalCode?: boolean | undefined;
    /**
     * A boolean value indicating if the region was matched during address matching.
     */
    region?: boolean | undefined;
    /**
     * A boolean value indicating if the street name was matched during address matching.
     */
    street?: boolean | undefined;
    /**
     * An integer value indicating the street number score as a result of address matching.
     */
    streetNumber?: number | undefined;
};

/** @internal */
export namespace AddressResponse$ {
    export const inboundSchema: z.ZodType<AddressResponse, z.ZodTypeDef, unknown> = z.object({
        addressScore: z.number().int().optional(),
        city: z.boolean().optional(),
        distance: z.number().optional(),
        postalCode: z.boolean().optional(),
        region: z.boolean().optional(),
        street: z.boolean().optional(),
        streetNumber: z.number().int().optional(),
    });

    export type Outbound = {
        addressScore?: number | undefined;
        city?: boolean | undefined;
        distance?: number | undefined;
        postalCode?: boolean | undefined;
        region?: boolean | undefined;
        street?: boolean | undefined;
        streetNumber?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AddressResponse> = z.object({
        addressScore: z.number().int().optional(),
        city: z.boolean().optional(),
        distance: z.number().optional(),
        postalCode: z.boolean().optional(),
        region: z.boolean().optional(),
        street: z.boolean().optional(),
        streetNumber: z.number().int().optional(),
    });
}
