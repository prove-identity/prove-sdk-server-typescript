/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type DataSourceEmailAddressResponseInternal = {
  emailAddress?: boolean | undefined;
};

/** @internal */
export const DataSourceEmailAddressResponseInternal$inboundSchema: z.ZodType<
  DataSourceEmailAddressResponseInternal,
  z.ZodTypeDef,
  unknown
> = z.object({
  emailAddress: z.boolean().optional(),
});

/** @internal */
export type DataSourceEmailAddressResponseInternal$Outbound = {
  emailAddress?: boolean | undefined;
};

/** @internal */
export const DataSourceEmailAddressResponseInternal$outboundSchema: z.ZodType<
  DataSourceEmailAddressResponseInternal$Outbound,
  z.ZodTypeDef,
  DataSourceEmailAddressResponseInternal
> = z.object({
  emailAddress: z.boolean().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DataSourceEmailAddressResponseInternal$ {
  /** @deprecated use `DataSourceEmailAddressResponseInternal$inboundSchema` instead. */
  export const inboundSchema =
    DataSourceEmailAddressResponseInternal$inboundSchema;
  /** @deprecated use `DataSourceEmailAddressResponseInternal$outboundSchema` instead. */
  export const outboundSchema =
    DataSourceEmailAddressResponseInternal$outboundSchema;
  /** @deprecated use `DataSourceEmailAddressResponseInternal$Outbound` instead. */
  export type Outbound = DataSourceEmailAddressResponseInternal$Outbound;
}
