/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Response body for the V3 Disenroll Identity API.
 */
export type V3DisenrollIdentityResponse = {
  /**
   * If true, the disenroll operation was successful.
   */
  success: boolean;
};

/** @internal */
export const V3DisenrollIdentityResponse$inboundSchema: z.ZodType<
  V3DisenrollIdentityResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  success: z.boolean(),
});

/** @internal */
export type V3DisenrollIdentityResponse$Outbound = {
  success: boolean;
};

/** @internal */
export const V3DisenrollIdentityResponse$outboundSchema: z.ZodType<
  V3DisenrollIdentityResponse$Outbound,
  z.ZodTypeDef,
  V3DisenrollIdentityResponse
> = z.object({
  success: z.boolean(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V3DisenrollIdentityResponse$ {
  /** @deprecated use `V3DisenrollIdentityResponse$inboundSchema` instead. */
  export const inboundSchema = V3DisenrollIdentityResponse$inboundSchema;
  /** @deprecated use `V3DisenrollIdentityResponse$outboundSchema` instead. */
  export const outboundSchema = V3DisenrollIdentityResponse$outboundSchema;
  /** @deprecated use `V3DisenrollIdentityResponse$Outbound` instead. */
  export type Outbound = V3DisenrollIdentityResponse$Outbound;
}

export function v3DisenrollIdentityResponseToJSON(
  v3DisenrollIdentityResponse: V3DisenrollIdentityResponse,
): string {
  return JSON.stringify(
    V3DisenrollIdentityResponse$outboundSchema.parse(
      v3DisenrollIdentityResponse,
    ),
  );
}

export function v3DisenrollIdentityResponseFromJSON(
  jsonString: string,
): SafeParseResult<V3DisenrollIdentityResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => V3DisenrollIdentityResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V3DisenrollIdentityResponse' from JSON`,
  );
}
