/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type IdentifiersResponse = {
    /**
     * A boolean value indicating if the date of birth was matched during processing.
     */
    dob?: boolean | undefined;
    /**
     * The results of the driver's license match*.
     */
    driversLicenseNumber?: boolean | undefined;
    /**
     * The results of the driver's license state match*.
     */
    driversLicenseState?: boolean | undefined;
    /**
     * A boolean value indicating if the last 4 digits of the social security number were matched during processing.
     */
    last4?: boolean | undefined;
    /**
     * The results of the full SSN match*.
     */
    ssn?: boolean | undefined;
};

/** @internal */
export namespace IdentifiersResponse$ {
    export const inboundSchema: z.ZodType<IdentifiersResponse, z.ZodTypeDef, unknown> = z.object({
        dob: z.boolean().optional(),
        driversLicenseNumber: z.boolean().optional(),
        driversLicenseState: z.boolean().optional(),
        last4: z.boolean().optional(),
        ssn: z.boolean().optional(),
    });

    export type Outbound = {
        dob?: boolean | undefined;
        driversLicenseNumber?: boolean | undefined;
        driversLicenseState?: boolean | undefined;
        last4?: boolean | undefined;
        ssn?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, IdentifiersResponse> = z.object({
        dob: z.boolean().optional(),
        driversLicenseNumber: z.boolean().optional(),
        driversLicenseState: z.boolean().optional(),
        last4: z.boolean().optional(),
        ssn: z.boolean().optional(),
    });
}
