/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type NameResponse = {
    /**
     * The first name score as a result of name matching.
     */
    firstName?: number | undefined;
    /**
     * The last name score as a result of name matching.
     */
    lastName?: number | undefined;
    /**
     * The overall name score as a result of name matching. A value >=70 indicates verified = TRUE.
     */
    nameScore?: number | undefined;
};

/** @internal */
export namespace NameResponse$ {
    export const inboundSchema: z.ZodType<NameResponse, z.ZodTypeDef, unknown> = z.object({
        firstName: z.number().int().optional(),
        lastName: z.number().int().optional(),
        nameScore: z.number().int().optional(),
    });

    export type Outbound = {
        firstName?: number | undefined;
        lastName?: number | undefined;
        nameScore?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, NameResponse> = z.object({
        firstName: z.number().int().optional(),
        lastName: z.number().int().optional(),
        nameScore: z.number().int().optional(),
    });
}
