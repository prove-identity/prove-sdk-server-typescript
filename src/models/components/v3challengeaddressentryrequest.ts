/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type V3ChallengeAddressEntryRequest = {
    /**
     * Address is the street address of the individual.
     */
    address?: string | undefined;
    /**
     * City of the individual.
     */
    city?: string | undefined;
    /**
     * Extended address is the apartment number or other extended address information.
     */
    extendedAddress?: string | undefined;
    /**
     * Postal code is the zip code of the individual.
     */
    postalCode?: string | undefined;
    /**
     * Region is the state or locality of the individual.
     */
    region?: string | undefined;
};

/** @internal */
export namespace V3ChallengeAddressEntryRequest$ {
    export const inboundSchema: z.ZodType<V3ChallengeAddressEntryRequest, z.ZodTypeDef, unknown> =
        z.object({
            address: z.string().optional(),
            city: z.string().optional(),
            extendedAddress: z.string().optional(),
            postalCode: z.string().optional(),
            region: z.string().optional(),
        });

    export type Outbound = {
        address?: string | undefined;
        city?: string | undefined;
        extendedAddress?: string | undefined;
        postalCode?: string | undefined;
        region?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, V3ChallengeAddressEntryRequest> =
        z.object({
            address: z.string().optional(),
            city: z.string().optional(),
            extendedAddress: z.string().optional(),
            postalCode: z.string().optional(),
            region: z.string().optional(),
        });
}
