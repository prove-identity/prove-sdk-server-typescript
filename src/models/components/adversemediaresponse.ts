/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type AdverseMediaResponse = {
    date?: string | undefined;
    snippet?: string | undefined;
    title?: string | undefined;
    url?: string | undefined;
};

/** @internal */
export namespace AdverseMediaResponse$ {
    export const inboundSchema: z.ZodType<AdverseMediaResponse, z.ZodTypeDef, unknown> = z
        .object({
            Date: z.string().optional(),
            Snippet: z.string().optional(),
            Title: z.string().optional(),
            Url: z.string().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                Date: "date",
                Snippet: "snippet",
                Title: "title",
                Url: "url",
            });
        });

    export type Outbound = {
        Date?: string | undefined;
        Snippet?: string | undefined;
        Title?: string | undefined;
        Url?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AdverseMediaResponse> = z
        .object({
            date: z.string().optional(),
            snippet: z.string().optional(),
            title: z.string().optional(),
            url: z.string().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                date: "Date",
                snippet: "Snippet",
                title: "Title",
                url: "Url",
            });
        });
}
