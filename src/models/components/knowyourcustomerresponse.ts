/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import { AdverseMediaResponse, AdverseMediaResponse$ } from "./adversemediaresponse.js";
import { AmlTypeListResponse, AmlTypeListResponse$ } from "./amltypelistresponse.js";
import * as z from "zod";

/**
 * KnowYourCustomerResponse - KYC response
 */
export type KnowYourCustomerResponse = {
    adverseMediaList?: Array<AdverseMediaResponse> | undefined;
    aliasList?: Array<string> | undefined;
    amlTypeLists?: Array<AmlTypeListResponse> | undefined;
    totalHits?: number | undefined;
};

/** @internal */
export namespace KnowYourCustomerResponse$ {
    export const inboundSchema: z.ZodType<KnowYourCustomerResponse, z.ZodTypeDef, unknown> = z
        .object({
            AdverseMediaList: z.array(AdverseMediaResponse$.inboundSchema).optional(),
            AliasList: z.array(z.string()).optional(),
            AmlTypeLists: z.array(AmlTypeListResponse$.inboundSchema).optional(),
            TotalHits: z.number().int().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                AdverseMediaList: "adverseMediaList",
                AliasList: "aliasList",
                AmlTypeLists: "amlTypeLists",
                TotalHits: "totalHits",
            });
        });

    export type Outbound = {
        AdverseMediaList?: Array<AdverseMediaResponse$.Outbound> | undefined;
        AliasList?: Array<string> | undefined;
        AmlTypeLists?: Array<AmlTypeListResponse$.Outbound> | undefined;
        TotalHits?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, KnowYourCustomerResponse> = z
        .object({
            adverseMediaList: z.array(AdverseMediaResponse$.outboundSchema).optional(),
            aliasList: z.array(z.string()).optional(),
            amlTypeLists: z.array(AmlTypeListResponse$.outboundSchema).optional(),
            totalHits: z.number().int().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                adverseMediaList: "AdverseMediaList",
                aliasList: "AliasList",
                amlTypeLists: "AmlTypeLists",
                totalHits: "TotalHits",
            });
        });
}
