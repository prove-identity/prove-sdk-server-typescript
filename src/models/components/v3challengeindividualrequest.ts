/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import {
    V3ChallengeAddressEntryRequest,
    V3ChallengeAddressEntryRequest$inboundSchema,
    V3ChallengeAddressEntryRequest$Outbound,
    V3ChallengeAddressEntryRequest$outboundSchema,
} from "./v3challengeaddressentryrequest.js";
import * as z from "zod";

export type V3ChallengeIndividualRequest = {
    /**
     * Addresses that belong to the individual.
     */
    addresses?: Array<V3ChallengeAddressEntryRequest> | undefined;
    /**
     * DOB is the date of birth of the individual.
     */
    dob?: string | undefined;
    /**
     * Email addresses that belong to the individual.
     */
    emailAddresses?: Array<string> | undefined;
    /**
     * First name of the individual.
     */
    firstName?: string | undefined;
    /**
     * Last name of the individual.
     */
    lastName?: string | undefined;
    /**
     * SSN is the social security number of the individual.
     */
    ssn?: string | undefined;
};

/** @internal */
export const V3ChallengeIndividualRequest$inboundSchema: z.ZodType<
    V3ChallengeIndividualRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    addresses: z.array(V3ChallengeAddressEntryRequest$inboundSchema).optional(),
    dob: z.string().optional(),
    emailAddresses: z.array(z.string()).optional(),
    firstName: z.string().optional(),
    lastName: z.string().optional(),
    ssn: z.string().optional(),
});

/** @internal */
export type V3ChallengeIndividualRequest$Outbound = {
    addresses?: Array<V3ChallengeAddressEntryRequest$Outbound> | undefined;
    dob?: string | undefined;
    emailAddresses?: Array<string> | undefined;
    firstName?: string | undefined;
    lastName?: string | undefined;
    ssn?: string | undefined;
};

/** @internal */
export const V3ChallengeIndividualRequest$outboundSchema: z.ZodType<
    V3ChallengeIndividualRequest$Outbound,
    z.ZodTypeDef,
    V3ChallengeIndividualRequest
> = z.object({
    addresses: z.array(V3ChallengeAddressEntryRequest$outboundSchema).optional(),
    dob: z.string().optional(),
    emailAddresses: z.array(z.string()).optional(),
    firstName: z.string().optional(),
    lastName: z.string().optional(),
    ssn: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V3ChallengeIndividualRequest$ {
    /** @deprecated use `V3ChallengeIndividualRequest$inboundSchema` instead. */
    export const inboundSchema = V3ChallengeIndividualRequest$inboundSchema;
    /** @deprecated use `V3ChallengeIndividualRequest$outboundSchema` instead. */
    export const outboundSchema = V3ChallengeIndividualRequest$outboundSchema;
    /** @deprecated use `V3ChallengeIndividualRequest$Outbound` instead. */
    export type Outbound = V3ChallengeIndividualRequest$Outbound;
}
