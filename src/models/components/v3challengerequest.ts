/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type V3ChallengeRequest = {
    /**
     * Correlation ID is the unique ID of the flow. To continue the flow, the field will also be used for each of the subsequent API calls in the same flow.
     */
    correlationId: string;
    /**
     * DOB is the date of birth in this format: YYYYY-MM-DD. Acceptable characters are: numeric with symbol '-'.
     */
    dob?: string | undefined;
    /**
     * Last4SSN is the last 4 numbers of the social security number. Acceptable characters are: numeric.
     */
    last4SSN?: string | undefined;
};

/** @internal */
export namespace V3ChallengeRequest$ {
    export const inboundSchema: z.ZodType<V3ChallengeRequest, z.ZodTypeDef, unknown> = z.object({
        correlationId: z.string(),
        dob: z.string().optional(),
        last4SSN: z.string().optional(),
    });

    export type Outbound = {
        correlationId: string;
        dob?: string | undefined;
        last4SSN?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, V3ChallengeRequest> = z.object({
        correlationId: z.string(),
        dob: z.string().optional(),
        last4SSN: z.string().optional(),
    });
}
