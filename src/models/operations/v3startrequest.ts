/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type V3StartRequestResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * Successful request.
     */
    v3StartResponse?: components.V3StartResponse | undefined;
};

/** @internal */
export namespace V3StartRequestResponse$ {
    export const inboundSchema: z.ZodType<V3StartRequestResponse, z.ZodTypeDef, unknown> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            V3StartResponse: components.V3StartResponse$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.V3StartResponse === undefined
                    ? null
                    : { v3StartResponse: v.V3StartResponse }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        V3StartResponse?: components.V3StartResponse$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, V3StartRequestResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            v3StartResponse: components.V3StartResponse$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.v3StartResponse === undefined
                    ? null
                    : { V3StartResponse: v.v3StartResponse }),
            };
        });
}
