/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type V3DomainLinkedResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * Successful request.
   */
  v3DomainLinkedResponse?: components.V3DomainLinkedResponse | undefined;
  headers: { [k: string]: Array<string> };
};

/** @internal */
export const V3DomainLinkedResponse$inboundSchema: z.ZodType<
  V3DomainLinkedResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  V3DomainLinkedResponse: components.V3DomainLinkedResponse$inboundSchema
    .optional(),
  Headers: z.record(z.array(z.string())),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
    "V3DomainLinkedResponse": "v3DomainLinkedResponse",
    "Headers": "headers",
  });
});

/** @internal */
export type V3DomainLinkedResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  V3DomainLinkedResponse?:
    | components.V3DomainLinkedResponse$Outbound
    | undefined;
  Headers: { [k: string]: Array<string> };
};

/** @internal */
export const V3DomainLinkedResponse$outboundSchema: z.ZodType<
  V3DomainLinkedResponse$Outbound,
  z.ZodTypeDef,
  V3DomainLinkedResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  v3DomainLinkedResponse: components.V3DomainLinkedResponse$outboundSchema
    .optional(),
  headers: z.record(z.array(z.string())),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
    v3DomainLinkedResponse: "V3DomainLinkedResponse",
    headers: "Headers",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V3DomainLinkedResponse$ {
  /** @deprecated use `V3DomainLinkedResponse$inboundSchema` instead. */
  export const inboundSchema = V3DomainLinkedResponse$inboundSchema;
  /** @deprecated use `V3DomainLinkedResponse$outboundSchema` instead. */
  export const outboundSchema = V3DomainLinkedResponse$outboundSchema;
  /** @deprecated use `V3DomainLinkedResponse$Outbound` instead. */
  export type Outbound = V3DomainLinkedResponse$Outbound;
}

export function v3DomainLinkedResponseToJSON(
  v3DomainLinkedResponse: V3DomainLinkedResponse,
): string {
  return JSON.stringify(
    V3DomainLinkedResponse$outboundSchema.parse(v3DomainLinkedResponse),
  );
}

export function v3DomainLinkedResponseFromJSON(
  jsonString: string,
): SafeParseResult<V3DomainLinkedResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => V3DomainLinkedResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V3DomainLinkedResponse' from JSON`,
  );
}
