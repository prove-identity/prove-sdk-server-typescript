/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type V3DomainLinkResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * V3DomainLinkResponse
   */
  v3DomainLinkResponse?: components.V3DomainLinkResponse | undefined;
};

/** @internal */
export const V3DomainLinkResponse$inboundSchema: z.ZodType<
  V3DomainLinkResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  V3DomainLinkResponse: components.V3DomainLinkResponse$inboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
    "V3DomainLinkResponse": "v3DomainLinkResponse",
  });
});

/** @internal */
export type V3DomainLinkResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  V3DomainLinkResponse?: components.V3DomainLinkResponse$Outbound | undefined;
};

/** @internal */
export const V3DomainLinkResponse$outboundSchema: z.ZodType<
  V3DomainLinkResponse$Outbound,
  z.ZodTypeDef,
  V3DomainLinkResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  v3DomainLinkResponse: components.V3DomainLinkResponse$outboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
    v3DomainLinkResponse: "V3DomainLinkResponse",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V3DomainLinkResponse$ {
  /** @deprecated use `V3DomainLinkResponse$inboundSchema` instead. */
  export const inboundSchema = V3DomainLinkResponse$inboundSchema;
  /** @deprecated use `V3DomainLinkResponse$outboundSchema` instead. */
  export const outboundSchema = V3DomainLinkResponse$outboundSchema;
  /** @deprecated use `V3DomainLinkResponse$Outbound` instead. */
  export type Outbound = V3DomainLinkResponse$Outbound;
}

export function v3DomainLinkResponseToJSON(
  v3DomainLinkResponse: V3DomainLinkResponse,
): string {
  return JSON.stringify(
    V3DomainLinkResponse$outboundSchema.parse(v3DomainLinkResponse),
  );
}

export function v3DomainLinkResponseFromJSON(
  jsonString: string,
): SafeParseResult<V3DomainLinkResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => V3DomainLinkResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V3DomainLinkResponse' from JSON`,
  );
}
