/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type V3ValidateRequestResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * Successful request.
   */
  v3ValidateResponse?: components.V3ValidateResponse | undefined;
};

/** @internal */
export const V3ValidateRequestResponse$inboundSchema: z.ZodType<
  V3ValidateRequestResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  V3ValidateResponse: components.V3ValidateResponse$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
    "V3ValidateResponse": "v3ValidateResponse",
  });
});

/** @internal */
export type V3ValidateRequestResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  V3ValidateResponse?: components.V3ValidateResponse$Outbound | undefined;
};

/** @internal */
export const V3ValidateRequestResponse$outboundSchema: z.ZodType<
  V3ValidateRequestResponse$Outbound,
  z.ZodTypeDef,
  V3ValidateRequestResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  v3ValidateResponse: components.V3ValidateResponse$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
    v3ValidateResponse: "V3ValidateResponse",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V3ValidateRequestResponse$ {
  /** @deprecated use `V3ValidateRequestResponse$inboundSchema` instead. */
  export const inboundSchema = V3ValidateRequestResponse$inboundSchema;
  /** @deprecated use `V3ValidateRequestResponse$outboundSchema` instead. */
  export const outboundSchema = V3ValidateRequestResponse$outboundSchema;
  /** @deprecated use `V3ValidateRequestResponse$Outbound` instead. */
  export type Outbound = V3ValidateRequestResponse$Outbound;
}
