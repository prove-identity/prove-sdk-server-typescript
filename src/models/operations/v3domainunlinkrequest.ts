/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type V3DomainUnlinkRequestResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * V3DomainUnlinkResponse
   */
  v3DomainUnlinkResponse?: components.V3DomainUnlinkResponse | undefined;
};

/** @internal */
export const V3DomainUnlinkRequestResponse$inboundSchema: z.ZodType<
  V3DomainUnlinkRequestResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  V3DomainUnlinkResponse: components.V3DomainUnlinkResponse$inboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
    "V3DomainUnlinkResponse": "v3DomainUnlinkResponse",
  });
});

/** @internal */
export type V3DomainUnlinkRequestResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  V3DomainUnlinkResponse?:
    | components.V3DomainUnlinkResponse$Outbound
    | undefined;
};

/** @internal */
export const V3DomainUnlinkRequestResponse$outboundSchema: z.ZodType<
  V3DomainUnlinkRequestResponse$Outbound,
  z.ZodTypeDef,
  V3DomainUnlinkRequestResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  v3DomainUnlinkResponse: components.V3DomainUnlinkResponse$outboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
    v3DomainUnlinkResponse: "V3DomainUnlinkResponse",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V3DomainUnlinkRequestResponse$ {
  /** @deprecated use `V3DomainUnlinkRequestResponse$inboundSchema` instead. */
  export const inboundSchema = V3DomainUnlinkRequestResponse$inboundSchema;
  /** @deprecated use `V3DomainUnlinkRequestResponse$outboundSchema` instead. */
  export const outboundSchema = V3DomainUnlinkRequestResponse$outboundSchema;
  /** @deprecated use `V3DomainUnlinkRequestResponse$Outbound` instead. */
  export type Outbound = V3DomainUnlinkRequestResponse$Outbound;
}

export function v3DomainUnlinkRequestResponseToJSON(
  v3DomainUnlinkRequestResponse: V3DomainUnlinkRequestResponse,
): string {
  return JSON.stringify(
    V3DomainUnlinkRequestResponse$outboundSchema.parse(
      v3DomainUnlinkRequestResponse,
    ),
  );
}

export function v3DomainUnlinkRequestResponseFromJSON(
  jsonString: string,
): SafeParseResult<V3DomainUnlinkRequestResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => V3DomainUnlinkRequestResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V3DomainUnlinkRequestResponse' from JSON`,
  );
}
