/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type V3ActivateIdentityRequest = {
  /**
   * A Prove-generated unique ID for a specific identity.
   */
  identityId: string;
  v3ActivateIdentityRequest?: components.V3ActivateIdentityRequest | undefined;
};

export type V3ActivateIdentityResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * V3ActivateIdentityResponse
   */
  v3ActivateIdentityResponse?:
    | components.V3ActivateIdentityResponse
    | undefined;
};

/** @internal */
export const V3ActivateIdentityRequest$inboundSchema: z.ZodType<
  V3ActivateIdentityRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  identityId: z.string(),
  V3ActivateIdentityRequest: components.V3ActivateIdentityRequest$inboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "V3ActivateIdentityRequest": "v3ActivateIdentityRequest",
  });
});

/** @internal */
export type V3ActivateIdentityRequest$Outbound = {
  identityId: string;
  V3ActivateIdentityRequest?:
    | components.V3ActivateIdentityRequest$Outbound
    | undefined;
};

/** @internal */
export const V3ActivateIdentityRequest$outboundSchema: z.ZodType<
  V3ActivateIdentityRequest$Outbound,
  z.ZodTypeDef,
  V3ActivateIdentityRequest
> = z.object({
  identityId: z.string(),
  v3ActivateIdentityRequest: components.V3ActivateIdentityRequest$outboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    v3ActivateIdentityRequest: "V3ActivateIdentityRequest",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V3ActivateIdentityRequest$ {
  /** @deprecated use `V3ActivateIdentityRequest$inboundSchema` instead. */
  export const inboundSchema = V3ActivateIdentityRequest$inboundSchema;
  /** @deprecated use `V3ActivateIdentityRequest$outboundSchema` instead. */
  export const outboundSchema = V3ActivateIdentityRequest$outboundSchema;
  /** @deprecated use `V3ActivateIdentityRequest$Outbound` instead. */
  export type Outbound = V3ActivateIdentityRequest$Outbound;
}

export function v3ActivateIdentityRequestToJSON(
  v3ActivateIdentityRequest: V3ActivateIdentityRequest,
): string {
  return JSON.stringify(
    V3ActivateIdentityRequest$outboundSchema.parse(v3ActivateIdentityRequest),
  );
}

export function v3ActivateIdentityRequestFromJSON(
  jsonString: string,
): SafeParseResult<V3ActivateIdentityRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => V3ActivateIdentityRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V3ActivateIdentityRequest' from JSON`,
  );
}

/** @internal */
export const V3ActivateIdentityResponse$inboundSchema: z.ZodType<
  V3ActivateIdentityResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  V3ActivateIdentityResponse: components
    .V3ActivateIdentityResponse$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
    "V3ActivateIdentityResponse": "v3ActivateIdentityResponse",
  });
});

/** @internal */
export type V3ActivateIdentityResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  V3ActivateIdentityResponse?:
    | components.V3ActivateIdentityResponse$Outbound
    | undefined;
};

/** @internal */
export const V3ActivateIdentityResponse$outboundSchema: z.ZodType<
  V3ActivateIdentityResponse$Outbound,
  z.ZodTypeDef,
  V3ActivateIdentityResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  v3ActivateIdentityResponse: components
    .V3ActivateIdentityResponse$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
    v3ActivateIdentityResponse: "V3ActivateIdentityResponse",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V3ActivateIdentityResponse$ {
  /** @deprecated use `V3ActivateIdentityResponse$inboundSchema` instead. */
  export const inboundSchema = V3ActivateIdentityResponse$inboundSchema;
  /** @deprecated use `V3ActivateIdentityResponse$outboundSchema` instead. */
  export const outboundSchema = V3ActivateIdentityResponse$outboundSchema;
  /** @deprecated use `V3ActivateIdentityResponse$Outbound` instead. */
  export type Outbound = V3ActivateIdentityResponse$Outbound;
}

export function v3ActivateIdentityResponseToJSON(
  v3ActivateIdentityResponse: V3ActivateIdentityResponse,
): string {
  return JSON.stringify(
    V3ActivateIdentityResponse$outboundSchema.parse(v3ActivateIdentityResponse),
  );
}

export function v3ActivateIdentityResponseFromJSON(
  jsonString: string,
): SafeParseResult<V3ActivateIdentityResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => V3ActivateIdentityResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V3ActivateIdentityResponse' from JSON`,
  );
}
